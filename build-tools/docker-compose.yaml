version: '3.9'

services:
  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    image: logger-service
    container_name: ${LOGGER_SERVICE_CONTAINER_NAME}
    restart: always
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "${LOGGER_SERVICE_PORT}:${LOGGER_SERVICE_PORT}"
    env_file:
      - .env  # Load environment variables from .env
    environment:
      MONGO_HOST: ${MONGO_HOST}                  # Set MongoDB host to the 'mongo' service name
      MONGO_PORT: ${MONGO_PORT}                  # Set MongoDB port
      MONGO_DB_NAME: ${MONGO_DB_NAME}            # Set MongoDB database name MONGO_DB_NAME
      MONGO_USER: ${MONGO_INITDB_ROOT_USERNAME}  # Mongo username from .env
      MONGO_PASS: ${MONGO_INITDB_ROOT_PASSWORD}  # Mongo password from .env

  mongo:
    image: mongo:latest
    container_name: ${MONGO_DB_CONTAINER_NAME}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Set from .env
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Set from .env
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_CONTAINER_NAME}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}  # Set from .env
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}  # Set from .env
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"  # RabbitMQ message broker port
      - "${RABBITMQ_MANAGEMENT_UI}:${RABBITMQ_MANAGEMENT_UI}"  # Management UI      
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  mongo-data:
    driver: local
  rabbitmq-data:
    driver: local
