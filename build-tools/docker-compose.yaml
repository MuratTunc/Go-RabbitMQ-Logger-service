version: '3.9'

services:
  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    image: logger-service-img
    restart: always
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "${LOGGER_SERVICE_PORT}:${LOGGER_SERVICE_PORT}"
    env_file:
      - .env  # Load environment variables from .env
    environment:
      MONGO_HOST: mongo           # Set MongoDB host to the 'mongo' service name
      MONGO_PORT: 27017           # Set MongoDB port
      MONGO_DB_NAME: logDB        # Set MongoDB database name
      MONGO_USER: ${MONGO_INITDB_ROOT_USERNAME}  # Mongo username from .env
      MONGO_PASS: ${MONGO_INITDB_ROOT_PASSWORD}  # Mongo password from .env

  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}  # Set from .env
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}  # Set from .env
    ports:
      - "27017:27017"  # Default MongoDB port
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}  # Set from .env
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}  # Set from .env
    ports:
      - "5672:5672"  # RabbitMQ message broker port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  mongo-data:
    driver: local
  rabbitmq-data:
    driver: local
